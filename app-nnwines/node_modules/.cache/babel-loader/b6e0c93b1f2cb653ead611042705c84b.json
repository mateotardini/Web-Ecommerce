{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext'; // prettier-ignore\n\nconst TOP = 0b1000,\n      RIGHT = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT = 0b0001,\n      ALL = 0b1111;\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView(_ref) {\n  let {\n    style = {},\n    mode,\n    edges,\n    ...rest\n  } = _ref;\n  const insets = useSafeAreaInsets();\n  const edgeBitmask = edges != null ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0) : ALL;\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    const flatStyle = StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal\n      } = flatStyle;\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal\n      } = flatStyle;\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,SAASC,iBAAT,QAAkC,mBAAlC,C,CAGA;;AACA,MAAMC,GAAG,GAAM,MAAf;AAAA,MACMC,KAAK,GAAI,MADf;AAAA,MAEMC,MAAM,GAAG,MAFf;AAAA,MAGMC,IAAI,GAAK,MAHf;AAAA,MAIMC,GAAG,GAAM,MAJf;AAMA;;AAEA,MAAMC,cAAoC,GAAG;EAC3CC,GAAG,EAAEN,GADsC;EAE3CO,KAAK,EAAEN,KAFoC;EAG3CO,MAAM,EAAEN,MAHmC;EAI3CO,IAAI,EAAEN;AAJqC,CAA7C;AAOA,OAAO,SAASO,YAAT,OAKqB;EAAA,IALC;IAC3BC,KAAK,GAAG,EADmB;IAE3BC,IAF2B;IAG3BC,KAH2B;IAI3B,GAAGC;EAJwB,IAKDC;EAC1B,MAAMC,MAAM,GAAGjB,iBAAiB,EAAhC;EAEA,MAAMkB,WAAW,GACfJ,KAAK,IAAI,IAATA,GACIA,KAAK,CAACK,MAANL,CAAa,CAACM,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGd,cAAc,CAACe,IAAD,CAApDP,EAA4D,CAA5DA,CADJA,GAEIT,GAHN;EAKA,MAAMiB,YAAY,GAAGzB,KAAK,CAAC0B,OAAN1B,CAAc,MAAM;IACvC,MAAM2B,QAAQ,GAAGN,WAAW,GAAGjB,GAAdiB,GAAoBD,MAAM,CAACV,GAA3BW,GAAiC,CAAlD;IACA,MAAMO,UAAU,GAAGP,WAAW,GAAGhB,KAAdgB,GAAsBD,MAAM,CAACT,KAA7BU,GAAqC,CAAxD;IACA,MAAMQ,WAAW,GAAGR,WAAW,GAAGf,MAAde,GAAuBD,MAAM,CAACR,MAA9BS,GAAuC,CAA3D;IACA,MAAMS,SAAS,GAAGT,WAAW,GAAGd,IAAdc,GAAqBD,MAAM,CAACP,IAA5BQ,GAAmC,CAArD;IAEA,MAAMU,SAAS,GAAG7B,UAAU,CAAC8B,OAAX9B,CAAmBa,KAAnBb,CAAlB;;IAEA,IAAIc,IAAI,KAAK,QAAb,EAAuB;MACrB,MAAM;QACJiB,MAAM,GAAG,CADL;QAEJC,cAAc,GAAGD,MAFb;QAGJE,gBAAgB,GAAGF,MAHf;QAIJG,SAAS,GAAGF,cAJR;QAKJG,WAAW,GAAGF,gBALV;QAMJG,YAAY,GAAGJ,cANX;QAOJK,UAAU,GAAGJ;MAPT,IAQFJ,SARJ;MAUA,MAAMS,WAAW,GAAG;QAClBJ,SAAS,EAAEA,SAAS,GAAGT,QADL;QAElBU,WAAW,EAAEA,WAAW,GAAGT,UAFT;QAGlBU,YAAY,EAAEA,YAAY,GAAGT,WAHX;QAIlBU,UAAU,EAAEA,UAAU,GAAGT;MAJP,CAApB;MAOA,OAAO,CAACf,KAAD,EAAQyB,WAAR,CAAP;IAlBF,OAmBO;MACL,MAAM;QACJC,OAAO,GAAG,CADN;QAEJC,eAAe,GAAGD,OAFd;QAGJE,iBAAiB,GAAGF,OAHhB;QAIJG,UAAU,GAAGF,eAJT;QAKJG,YAAY,GAAGF,iBALX;QAMJG,aAAa,GAAGJ,eANZ;QAOJK,WAAW,GAAGJ;MAPV,IAQFZ,SARJ;MAUA,MAAMiB,YAAY,GAAG;QACnBJ,UAAU,EAAEA,UAAU,GAAGjB,QADN;QAEnBkB,YAAY,EAAEA,YAAY,GAAGjB,UAFV;QAGnBkB,aAAa,EAAEA,aAAa,GAAGjB,WAHZ;QAInBkB,WAAW,EAAEA,WAAW,GAAGjB;MAJR,CAArB;MAOA,OAAO,CAACf,KAAD,EAAQiC,YAAR,CAAP;IACD;EA9CkB,GA+ClB,CAACjC,KAAD,EAAQK,MAAR,EAAgBJ,IAAhB,EAAsBK,WAAtB,CA/CkBrB,CAArB;EAiDA,oBAAOA,oBAACC,IAAD;IAAMc,KAAK,EAAEU;EAAb,GAA+BP,IAA/B,EAAP;AACD","names":["React","View","StyleSheet","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","style","mode","edges","rest","_ref","insets","edgeBitmask","reduce","accum","edge","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle"],"sources":["C:\\Users\\mateo\\Desktop\\React\\react-test\\node_modules\\react-native-safe-area-context\\lib\\module\\SafeAreaView.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport type { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}