{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\n\nexport default function useCurrentRender(_ref) {\n  let {\n    state,\n    navigation,\n    descriptors\n  } = _ref;\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;AAiBA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gBAAT,OAIH;EAAA,IAJ6B;IACvCC,KADuC;IAEvCC,UAFuC;IAGvCC;EAHuC,IAI7BC;EACV,MAAMC,OAAO,GAAGP,KAAK,CAACQ,UAANR,CAAiBC,oBAAjBD,CAAhB;;EAEA,IAAIO,OAAO,IAAIH,UAAU,CAACK,SAAXL,EAAf,EAAuC;IACrCG,OAAO,CAACG,OAARH,GAAkBF,WAAW,CAACF,KAAK,CAACQ,MAANR,CAAaA,KAAK,CAACS,KAAnBT,EAA0BU,GAA3B,CAAXR,CAA2CK,OAA7DH;EACD;AACF","names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","_ref","current","useContext","isFocused","options","routes","index","key"],"sources":["C:\\Users\\mateo\\Desktop\\React\\react-test\\node_modules\\@react-navigation\\core\\lib\\module\\useCurrentRender.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}