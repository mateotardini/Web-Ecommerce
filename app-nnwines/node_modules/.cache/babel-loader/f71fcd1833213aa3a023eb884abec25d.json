{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio = /*#__PURE__*/function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  _createClass(PixelRatio, null, [{\n    key: \"get\",\n\n    /**\n     * Returns the device pixel density.\n     */\n    value: function get() {\n      return Dimensions.get('window').scale;\n    }\n    /**\n     * No equivalent for Web\n     */\n\n  }, {\n    key: \"getFontScale\",\n    value: function getFontScale() {\n      return Dimensions.get('window').fontScale || PixelRatio.get();\n    }\n    /**\n     * Converts a layout size (dp) to pixel size (px).\n     * Guaranteed to return an integer number.\n     */\n\n  }, {\n    key: \"getPixelSizeForLayoutSize\",\n    value: function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n    /**\n     * Rounds a layout size (dp) to the nearest layout size that corresponds to\n     * an integer number of pixels. For example, on a device with a PixelRatio\n     * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n     * exactly (8.33 * 3) = 25 pixels.\n     */\n\n  }, {\n    key: \"roundToNearestPixel\",\n    value: function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n\n  return PixelRatio;\n}();\n\nexport { PixelRatio as default };","map":null,"metadata":{},"sourceType":"module"}