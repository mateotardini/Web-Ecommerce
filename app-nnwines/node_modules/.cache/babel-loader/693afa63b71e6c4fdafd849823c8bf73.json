{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nexport default function useOptionsGetters(_ref) {\n  let {\n    key,\n    options,\n    navigation\n  } = _ref;\n  const optionsRef = React.useRef(options);\n  const optionsGettersFromChildRef = React.useRef({});\n  const {\n    onOptionsChange\n  } = React.useContext(NavigationBuilderContext);\n  const {\n    addOptionsGetter: parentAddOptionsGetter\n  } = React.useContext(NavigationStateContext);\n  const optionsChangeListener = React.useCallback(() => {\n    var _navigation$isFocused;\n\n    const isFocused = (_navigation$isFocused = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) !== null && _navigation$isFocused !== void 0 ? _navigation$isFocused : true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      var _optionsRef$current;\n\n      onOptionsChange((_optionsRef$current = optionsRef.current) !== null && _optionsRef$current !== void 0 ? _optionsRef$current : {});\n    }\n  }, [navigation, onOptionsChange]);\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        var _optionsGettersFromCh, _optionsGettersFromCh2;\n\n        const result = (_optionsGettersFromCh = (_optionsGettersFromCh2 = optionsGettersFromChildRef.current)[key]) === null || _optionsGettersFromCh === void 0 ? void 0 : _optionsGettersFromCh.call(_optionsGettersFromCh2); // null means unfocused route\n\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n  const getCurrentOptions = React.useCallback(() => {\n    var _navigation$isFocused2;\n\n    const isFocused = (_navigation$isFocused2 = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) !== null && _navigation$isFocused2 !== void 0 ? _navigation$isFocused2 : true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n  React.useEffect(() => {\n    return parentAddOptionsGetter === null || parentAddOptionsGetter === void 0 ? void 0 : parentAddOptionsGetter(key, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n  const addOptionsGetter = React.useCallback((key, getter) => {\n    optionsGettersFromChildRef.current[key] = getter;\n    optionsChangeListener();\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete optionsGettersFromChildRef.current[key];\n      optionsChangeListener();\n    };\n  }, [optionsChangeListener]);\n  return {\n    addOptionsGetter,\n    getCurrentOptions\n  };\n}","map":{"version":3,"mappings":"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","names":["React","NavigationBuilderContext","NavigationStateContext","useOptionsGetters","key","options","navigation","_ref","optionsRef","useRef","optionsGettersFromChildRef","onOptionsChange","useContext","addOptionsGetter","parentAddOptionsGetter","optionsChangeListener","useCallback","isFocused","hasChildren","Object","keys","current","length","useEffect","addListener","getOptionsFromListener","hasOwnProperty","result","_optionsGettersFromCh","getCurrentOptions","optionsFromListener","getter"],"sources":["C:\\Users\\mateo\\Desktop\\React\\react-test\\node_modules\\@react-navigation\\core\\lib\\module\\useOptionsGetters.tsx"],"sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}