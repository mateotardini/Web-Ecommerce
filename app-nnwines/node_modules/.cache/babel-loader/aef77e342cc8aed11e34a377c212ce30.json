{"ast":null,"code":"/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nexport default function isArrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return a.every((it, index) => it === b[index]);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAT,CAAsBC,CAAtB,EAAgCC,CAAhC,EAA0C;EACvD,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD;;EAED,IAAID,CAAC,CAACE,MAAFF,KAAaC,CAAC,CAACC,MAAnB,EAA2B;IACzB,OAAO,KAAP;EACD;;EAED,OAAOF,CAAC,CAACG,KAAFH,CAAQ,CAACI,EAAD,EAAKC,KAAL,KAAeD,EAAE,KAAKH,CAAC,CAACI,KAAD,CAA/BL,CAAP;AACD","names":["isArrayEqual","a","b","length","every","it","index"],"sources":["C:\\Users\\mateo\\Desktop\\React\\react-test\\node_modules\\@react-navigation\\core\\lib\\module\\isArrayEqual.tsx"],"sourcesContent":["/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nexport default function isArrayEqual(a: any[], b: any[]) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return a.every((it, index) => it === b[index]);\n}\n"]},"metadata":{},"sourceType":"module"}