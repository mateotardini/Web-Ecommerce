{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _classCallCheck from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nvar AnimatedSubtraction = /*#__PURE__*/function (_AnimatedWithChildren) {\n  _inherits(AnimatedSubtraction, _AnimatedWithChildren);\n\n  function AnimatedSubtraction(a, b) {\n    var _this;\n\n    _classCallCheck(this, AnimatedSubtraction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));\n    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n    return _this;\n  }\n\n  _createClass(AnimatedSubtraction, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._a.__makeNative();\n\n      this._b.__makeNative();\n\n      _get(_getPrototypeOf(AnimatedSubtraction.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._a.__getValue() - this._b.__getValue();\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._a.__addChild(this);\n\n      this._b.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._a.__removeChild(this);\n\n      this._b.__removeChild(this);\n\n      _get(_getPrototypeOf(AnimatedSubtraction.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'subtraction',\n        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]\n      };\n    }\n  }]);\n\n  return AnimatedSubtraction;\n}(AnimatedWithChildren);\n\nexport default AnimatedSubtraction;","map":null,"metadata":{},"sourceType":"module"}