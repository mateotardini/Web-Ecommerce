{"ast":null,"code":"import { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useSafeAreaFrame, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\nexport default function Screen(props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style\n  } = props;\n  const [headerHeight, setHeaderHeight] = React.useState(() => getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight));\n  return /*#__PURE__*/React.createElement(Background, {\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.content\n  }, /*#__PURE__*/React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, /*#__PURE__*/React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight !== null && parentHeaderHeight !== void 0 ? parentHeaderHeight : 0\n  }, children))), headerShown ? /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigation\n  }, /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n    value: route\n  }, /*#__PURE__*/React.createElement(View, {\n    onLayout: e => {\n      const {\n        height\n      } = e.nativeEvent.layout;\n      setHeaderHeight(height);\n    },\n    style: headerTransparent ? styles.absolute : null\n  }, header))) : null);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"mappings":"AAAA,SACEA,iBADF,EAGEC,sBAHF,QAMO,0BANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAoBC,UAApB,EAAgCC,IAAhC,QAAuD,cAAvD;AACA,SACEC,gBADF,EAEEC,iBAFF,QAGO,gCAHP;AAKA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,sBAAP,MAAmC,iCAAnC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AAeA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAA8B;EAC3C,MAAMC,UAAU,GAAGR,gBAAgB,EAAnC;EACA,MAAMS,MAAM,GAAGR,iBAAiB,EAAhC;EAEA,MAAMS,mBAAmB,GAAGb,KAAK,CAACc,UAANd,CAAiBQ,kBAAjBR,CAA5B;EACA,MAAMe,kBAAkB,GAAGf,KAAK,CAACc,UAANd,CAAiBO,mBAAjBP,CAA3B;EAEA,MAAM;IACJgB,OADI;IAEJC,KAAK,GAAG,KAFJ;IAGJC,MAHI;IAIJC,WAAW,GAAG,IAJV;IAKJC,iBALI;IAMJC,qBAAqB,GAAGR,mBAAmB,GAAG,CAAH,GAAOD,MAAM,CAACU,GANrD;IAOJC,UAPI;IAQJC,KARI;IASJC,QATI;IAUJC;EAVI,IAWFhB,KAXJ;EAaA,MAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkC5B,KAAK,CAAC6B,QAAN7B,CAAe,MACrDM,sBAAsB,CAACK,UAAD,EAAaM,KAAb,EAAoBI,qBAApB,CADgBrB,CAAxC;EAIA,oBACEA,oBAACK,UAAD;IACEyB,2BAA2B,EAAE,CAACd,OADhC;IAEEe,yBAAyB,EAAEf,OAAO,GAAG,MAAH,GAAY,qBAFhD;IAGEU,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBP,KAAnB;EAHT,gBAKE1B,oBAACE,IAAD;IAAMwB,KAAK,EAAEM,MAAM,CAACE;EAApB,gBACElC,oBAACQ,kBAAD,CAAoB2B,QAApB;IACEC,KAAK,EAAEvB,mBAAmB,IAAIM,WAAW,KAAK;EADhD,gBAGEnB,oBAACO,mBAAD,CAAqB4B,QAArB;IACEC,KAAK,EAAEjB,WAAW,GAAGQ,YAAH,GAAkBZ,kBAAlB,SAAkBA,sBAAlB,WAAkBA,wBAAsB;EAD5D,GAGGU,QAHH,CAHF,CADF,CALF,EAgBGN,WAAW,gBACVnB,oBAACF,iBAAD,CAAmBqC,QAAnB;IAA4BC,KAAK,EAAEb;EAAnC,gBACEvB,oBAACD,sBAAD,CAAwBoC,QAAxB;IAAiCC,KAAK,EAAEZ;EAAxC,gBACExB,oBAACE,IAAD;IACEmC,QAAQ,EAAGC,CAAD,IAAO;MACf,MAAM;QAAEC;MAAF,IAAaD,CAAC,CAACE,WAAFF,CAAcG,MAAjC;MAEAb,eAAe,CAACW,MAAD,CAAfX;IAJJ;IAMEF,KAAK,EAAEN,iBAAiB,GAAGY,MAAM,CAACU,QAAV,GAAqB;EAN/C,GAQGxB,MARH,CADF,CADF,CADU,GAeR,IA/BN,CADF;AAmCD;AAED,MAAMc,MAAM,GAAG/B,UAAU,CAAC0C,MAAX1C,CAAkB;EAC/BgC,SAAS,EAAE;IACTW,IAAI,EAAE,CADG;IAETC,aAAa,EAAE;EAFN,CADoB;EAK/B;EACAX,OAAO,EAAE;IACPU,IAAI,EAAE;EADC,CANsB;EAS/BF,QAAQ,EAAE;IACRI,QAAQ,EAAE,UADF;IAERxB,GAAG,EAAE,CAFG;IAGRyB,IAAI,EAAE,CAHE;IAIRC,KAAK,EAAE;EAJC;AATqB,CAAlB/C,CAAf","names":["NavigationContext","NavigationRouteContext","React","StyleSheet","View","useSafeAreaFrame","useSafeAreaInsets","Background","getDefaultHeaderHeight","HeaderHeightContext","HeaderShownContext","Screen","props","dimensions","insets","isParentHeaderShown","useContext","parentHeaderHeight","focused","modal","header","headerShown","headerTransparent","headerStatusBarHeight","top","navigation","route","children","style","headerHeight","setHeaderHeight","useState","accessibilityElementsHidden","importantForAccessibility","styles","container","content","Provider","value","onLayout","e","height","nativeEvent","layout","absolute","create","flex","flexDirection","position","left","right"],"sources":["C:\\Users\\mateo\\Desktop\\React\\react-test\\node_modules\\@react-navigation\\elements\\lib\\module\\Screen.tsx"],"sourcesContent":["import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}