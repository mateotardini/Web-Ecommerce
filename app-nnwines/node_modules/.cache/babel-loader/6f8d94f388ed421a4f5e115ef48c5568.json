{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _classCallCheck from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mateo\\\\Desktop\\\\React\\\\react-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport AnimatedNode from './AnimatedNode';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nvar AnimatedWithChildren = /*#__PURE__*/function (_AnimatedNode) {\n  _inherits(AnimatedWithChildren, _AnimatedNode);\n\n  function AnimatedWithChildren() {\n    var _this;\n\n    _classCallCheck(this, AnimatedWithChildren);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedWithChildren).call(this));\n    _this._children = [];\n    return _this;\n  }\n\n  _createClass(AnimatedWithChildren, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        this.__isNative = true;\n\n        for (var _iterator = _createForOfIteratorHelperLoose(this._children), _step; !(_step = _iterator()).done;) {\n          var child = _step.value;\n\n          child.__makeNative();\n\n          NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n        }\n      }\n\n      _get(_getPrototypeOf(AnimatedWithChildren.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__addChild\",\n    value: function __addChild(child) {\n      if (this._children.length === 0) {\n        this.__attach();\n      }\n\n      this._children.push(child);\n\n      if (this.__isNative) {\n        // Only accept \"native\" animated nodes as children\n        child.__makeNative();\n\n        NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"__removeChild\",\n    value: function __removeChild(child) {\n      var index = this._children.indexOf(child);\n\n      if (index === -1) {\n        console.warn(\"Trying to remove a child that doesn't exist\");\n        return;\n      }\n\n      if (this.__isNative && child.__isNative) {\n        NativeAnimatedHelper.API.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n      }\n\n      this._children.splice(index, 1);\n\n      if (this._children.length === 0) {\n        this.__detach();\n      }\n    }\n  }, {\n    key: \"__getChildren\",\n    value: function __getChildren() {\n      return this._children;\n    }\n  }, {\n    key: \"__callListeners\",\n    value: function __callListeners(value) {\n      _get(_getPrototypeOf(AnimatedWithChildren.prototype), \"__callListeners\", this).call(this, value);\n\n      if (!this.__isNative) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(this._children), _step2; !(_step2 = _iterator2()).done;) {\n          var child = _step2.value;\n\n          if (child.__getValue) {\n            child.__callListeners(child.__getValue());\n          }\n        }\n      }\n    }\n  }]);\n\n  return AnimatedWithChildren;\n}(AnimatedNode);\n\nexport default AnimatedWithChildren;","map":null,"metadata":{},"sourceType":"module"}