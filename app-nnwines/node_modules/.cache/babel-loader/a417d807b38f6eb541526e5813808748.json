{"ast":null,"code":"import * as React from 'react';\n\nconst NavigationContent = _ref => {\n  let {\n    render,\n    children\n  } = _ref;\n  return render(children);\n};\n\nexport default function useComponent(render) {\n  const renderRef = React.useRef(render); // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n\n  renderRef.current = render;\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n  return React.useRef(_ref2 => {\n    let {\n      children\n    } = _ref2;\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n\n    return /*#__PURE__*/React.createElement(NavigationContent, {\n      render: render\n    }, children);\n  }).current;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AASA,MAAMC,iBAAiB,GAAGC,QAAiC;EAAA,IAAhC;IAAEC,MAAF;IAAUC;EAAV,IAAgCF;EACzD,OAAOC,MAAM,CAACC,QAAD,CAAb;AADF;;AAIA,eAAe,SAASC,YAAT,CAAsBF,MAAtB,EAAsC;EACnD,MAAMG,SAAS,GAAGN,KAAK,CAACO,MAANP,CAA4BG,MAA5BH,CAAlB,CADmD,CAGnD;EACA;EACA;;EACAM,SAAS,CAACE,OAAVF,GAAoBH,MAApBG;EAEAN,KAAK,CAACS,SAANT,CAAgB,MAAM;IACpBM,SAAS,CAACE,OAAVF,GAAoB,IAApBA;EADF;EAIA,OAAON,KAAK,CAACO,MAANP,CAAaU,SAAiD;IAAA,IAAhD;MAAEN;IAAF,IAAgDM;IACnE,MAAMP,MAAM,GAAGG,SAAS,CAACE,OAAzB;;IAEA,IAAIL,MAAM,KAAK,IAAf,EAAqB;MACnB,MAAM,IAAIQ,KAAJ,CACJ,+EADI,CAAN;IAGD;;IAED,oBAAOX,oBAACC,iBAAD;MAAmBE,MAAM,EAAEA;IAA3B,GAAoCC,QAApC,CAAP;EATK,GAUJI,OAVH;AAWD","names":["React","NavigationContent","_ref","render","children","useComponent","renderRef","useRef","current","useEffect","_ref2","Error"],"sources":["C:\\Users\\mateo\\Desktop\\React\\react-test\\node_modules\\@react-navigation\\core\\lib\\module\\useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"module"}